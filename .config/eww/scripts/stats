#!/bin/bash

# Get Uptime in DD:HH:MM:SS format
UPTIME=$(awk '{printf "%d:%02d:%02d:%02d", $1/86400, ($1%86400)/3600, ($1%3600)/60, $1%60}' /proc/uptime)

# Get Per-Core CPU Usage as an Array of Arrays
if command -v mpstat > /dev/null; then
    CORE_USAGE=$(mpstat -P ALL 1 1 | awk '/^[0-9]/ {printf "%d,", 100 - $NF}' | sed 's/,$//')
    CORE_USAGE_ARRAY=($(echo $CORE_USAGE | tr ',' ' '))
    CPU_CORES=$(echo "[[${CORE_USAGE_ARRAY[@]:0:4}] [${CORE_USAGE_ARRAY[@]:4:4}] [${CORE_USAGE_ARRAY[@]:8:4}] [${CORE_USAGE_ARRAY[@]:12:4}]]" | sed 's/ /,/g')
    CPU_CORE_USAGE="{\"cores\": $CPU_CORES}"
else
    CPU_CORE_USAGE="mpstat not found. Install 'sysstat' package."
fi

# Get Average Core Frequency
if [[ -f /proc/cpuinfo ]]; then
    AVG_FREQ=$(awk '/cpu MHz/ {sum+=$4; count++} END {if (count > 0) printf "%.2f", sum/count}' /proc/cpuinfo)
else
    AVG_FREQ="N/A"
fi

# Get Memory Usage (in gigabytes and percentage)
MEMORY_STATS=$(free | awk '/^Mem/ {
    total=$2/1024/1024;
    used=$3/1024/1024;
    free=$4/1024/1024;
    percent=(used/total)*100;
    printf "{\"used\": %.2f, \"total\": %.2f, \"free\": %.2f, \"percent_used\": %.2f}", used, total, free, percent
}')

# Get Disk Usage (in gigabytes and percentage)
DISK_STATS=$(df --block-size=1G | awk '$NF=="/" {
    total=$2;
    used=$3;
    available=$4;
    percent=(used/total)*100;
    printf "{\"used\": %d, \"available\": %d, \"total\": %d, \"percent_used\": %.2f}", used, available, total, percent
}')

# Get NVIDIA GPU Usage
if command -v nvidia-smi > /dev/null; then
    GPU_STATS=$(nvidia-smi --query-gpu=utilization.gpu,utilization.memory,memory.used,memory.total --format=csv,noheader,nounits | \
    awk -F, '{printf "{\"gpu_utilization\": %d, \"memory_used\": %d, \"memory_total\": %d}", $1, $3/1024, $4/1024}')
else
    GPU_STATS="nvidia-smi not found. Ensure NVIDIA drivers are installed."
fi

# Get Battery Status from BAT1
if [[ -d /sys/class/power_supply/BAT1 ]]; then
    BATTERY_CAPACITY=$(cat /sys/class/power_supply/BAT1/capacity)
    BATTERY_STATUS=$(cat /sys/class/power_supply/BAT1/status)
    BATTERY="{\"capacity\": $BATTERY_CAPACITY, \"status\": \"$BATTERY_STATUS\"}"
else
    BATTERY="Battery information not available."
fi

# Combine into JSON
echo -e "{
  \"uptime\": \"$UPTIME\",
  \"cpu_per_core\": $CPU_CORE_USAGE,
  \"average_frequency\": \"$AVG_FREQ MHz\",
  \"memory\": $MEMORY_STATS,
  \"disk\": $DISK_STATS,
  \"gpu\": $GPU_STATS,
  \"battery\": $BATTERY
}"
